#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define SYM 1
#define FUN 2

&mt {
    tapping-term-ms = <150>;
};

/ {
    behaviors {
        m1_macro: macro_ctrl_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp L>
                , <&macro_release &kp LCTRL>
                ;
        };

        m2_macro: macro_ctrl_h {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp H>
                , <&macro_release &kp LCTRL>
                ;
        };

        m3_macro: macro_sleep {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_press &kp LSHIFT>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LALT>
                , <&macro_release &kp LSHIFT>
                ;
        };
    };

        keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            /*           C0          C1         C2         C3         C4         C5              C6         C7         C8         C9         C10         C11 */
            /* R1 */  &kp TAB     &kp SQT    &kp COMMA  &kp DOT    &kp P      &kp Y           &kp F      &kp G      &kp C      &kp R      &kp L       &kp SLASH
            /* R2 */  &kp LCTRL   &kp A      &kp O      &kp E      &kp U      &kp I           &kp D      &kp H      &kp T      &kp N      &kp S       &mt LCTRL ESC
            /* R3 */  &kp LSHIFT  &kp SEMI   &kp Q      &kp J      &kp K      &kp X           &kp B      &kp M      &kp W      &kp V      &kp Z       &kp RSHIFT
            /* R4 */              &kp N0     &kp N1                                                                           &kp N8     &kp N9
            /* R4 */                                     &kp N2     &kp N3     &kp N4         &kp N5     &kp N6     &kp N7                      
            /* R5 */                                     &kp A      &kp B      &mo C          &kp D      &kp E      &kp F
            >;
        };

        symbols_layer {
            bindings = <
            /*           C0           C1           C2           C3           C4           C5              C6           C7           C8           C9           C10          C11 */
            /* R1 */  &trans       &kp LS(N1)   &kp LS(N2)   &kp LS(N3)   &kp LS(N4)   &kp LS(N5)      &kp LS(N6)   &kp LS(N7)   &kp LS(N8)   &kp LS(N9)   &kp LS(N0)   &trans
            /* R2 */  &kp LSHIFT   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5          &kp N6       &kp N7       &kp N8       &kp N9       &kp N0       &kp LCTRL
            /* R3 */  &none        &kp LS(GRAVE)&kp LS(MINUS)&kp LS(EQUAL)&kp LS(LBKT)&kp LS(RBKT)    &kp BSLH     &kp MINUS    &kp EQUAL    &kp LBKT     &kp RBKT     &trans
            /* R4 */               &trans       &trans                                                                                        &trans       &trans             
            /* R4 */                                         &trans       &trans       &trans          &trans       &trans       &trans                                       
            /* R5 */                                         &trans       &trans       &trans          &trans       &trans       &trans                                       
            >;
        };

        function_layer {
            bindings = <
            /*           C0           C1           C2           C3           C4           C5              C6           C7           C8           C9           C10         C11 */
            /* R1 */  &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6          &kp F7       &kp F8       &kp F9       &kp F10      &kp F11     &bootloader
            /* R2 */  &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &kp C_NEXT   &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT   &kp C_PP
            /* R3 */  &out OUT_BLE &out OUT_USB &trans       &trans       &trans       &trans          &trans       &trans       &m3_macro    &trans       &trans      &kp CAPS
            /* R4 */               &trans       &trans                                                                                        &kp C_VOL_DN &kp C_VOL_UP
            /* R4 */                                         &trans       &trans       &trans          &trans       &trans       &trans
            /* R5 */                                         &trans       &trans       &trans          &trans       &trans       &trans
            >;
        };
    };
};
